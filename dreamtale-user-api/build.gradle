// 版本信息
version = "0.0.1-SNAPSHOT"
group = "com.dreamtale"

buildscript {
    ext {
        springBootVersion = "1.5.4.RELEASE"
        springCloudVersion = "Dalston.SR2"
        jyallRepoBase = "http://10.10.10.60:8081/nexus/content"
    }
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0'
    }

}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "maven-publish"

sourceCompatibility = 1.8

// 发布包的文件名前缀
def prjArtifactId = "dreamtale-user-api"

jar {
    baseName = prjArtifactId
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework:spring-context:4.2.4.RELEASE"
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.8.8'
    compile "org.hibernate:hibernate-validator:5.2.4.Final"
    compile("com.wordnik:swagger-jersey2-jaxrs_2.10:1.3.8") {
        exclude(module: 'jsr311-api')
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

test {
    systemProperties 'property': 'value'
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.9"
}

// 公共Jar包
task DreamtaleUserApiJar(type: Jar) {
    from sourceSets.main.output
    exclude "**/demo/**", "**/*.yml", "**/*.xml", "**/*.sql"

    manifest {
        attributes(
                "Created-By": "${System.getProperty('java.version')} (dreamtale)",
                "Implementation-Version": project.version
        )
    }
}

// 源码包
task DreamtaleUserSourcesJar(type: Jar) {
    classifier "sources"

    from sourceSets.main.allJava
    exclude "**/demo/**", "**/*.yml", "**/*.xml", "**/*.sql"

    manifest {
        attributes(
                "Created-By": "${System.getProperty('java.version')} (dreamtale)",
                "Implementation-Version": project.version
        )
    }
}

// 发布JAR包
publishing {
    publications {
        common(MavenPublication) {
            //groupId "com.dreamtale"
            //version "1.0.0"
            artifactId prjArtifactId

            from components.java
            artifacts.clear()

            artifacts = [DreamtaleUserApiJar, DreamtaleUserSourcesJar]
            //artifacts = [commonJar, commonSourcesJar]
        }

        all {
            pom.withXml {
                asNode().dependencies."*".findAll() {
                    it.scope.text() == "runtime" && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each {
                    it.scope*.value = "compile"
                }
            }
        }
    }

    repositories {
        maven {
            url "${jyallMvnRepoRrlBase}/repositories/jsjy-${project.version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release'}"
            credentials {
                username = "deploy"
                password = "eBbef58C"
            }
        }
    }
}